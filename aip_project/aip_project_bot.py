import telebot
import config
import sqlite3

from telebot import types

bot = telebot.TeleBot(config.TOKEN)
connect = sqlite3.connect("project.db", check_same_thread=False)
cursor = connect.cursor()

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
@bot.message_handler(commands=['start'])
def welcome(message):
    welc = open('welc.webp', 'rb')
    bot.send_sticker(message.chat.id, welc)

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤ —á–∞—Ç–µ
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ù–∞–±—Ä–∞—Ç—å –≤–µ—Å üçî")
    item2 = types.KeyboardButton("–°–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å ü•í")
    item3 = types.KeyboardButton("–£–∑–Ω–∞—Ç—å –∫–∞–ª–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å üëç")

    markup.add(item1, item2, item3)

    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏, –∞ —Ç–∞–∫–∂–µ —Ç—É—Ç –µ—â—ë –º–Ω–æ–≥–æ —Ä–∞–∑–Ω—ã—Ö –ø–ª—é—à–µ–∫!".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup)
    bot.send_message(message.chat.id, "–°–∫–∞–∂–∏, –∫–∞–∫—É—é –ø—Ä–µ—Å–ª–µ–¥—É–µ—à—å —Ü–µ–ª—å?")

@bot.message_handler(content_types=['text'])
def funcs(message):
    if message.chat.type == 'private':
        if message.text == "–ù–∞–±—Ä–∞—Ç—å –≤–µ—Å üçî" or message.text == "–°–±—Ä–æ—Å–∏—Ç—å –≤–µ—Å ü•í" :

            # –ö–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            InlKey = types.InlineKeyboardMarkup(row_width=2)
            man = types.InlineKeyboardButton("–ú", callback_data='male')
            woman = types.InlineKeyboardButton("–ñ", callback_data='female')

            InlKey.add(man, woman)

            bot.send_message(message.chat.id, "–ö–∞–∫–æ–π –ø–æ–ª? - –ú/–ñ", reply_markup=InlKey)

        elif message.text == '–£–∑–Ω–∞—Ç—å –∫–∞–ª–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å üëç':
            bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ –ø—Ä–æ–¥—É–∫—Ç. –ù–∞–ø—Ä–∏–º–µ—Ä, "–ê–≤–æ–∫–∞–¥–æ":')
        #elif message.text == "–ê–≤–æ–∫–∞–¥–æ":
            #bot.send_message(message.chat.id,"<b>–ê–≤–æ–∫–∞–¥–æ</b>\n<b>–ö–∞–ª–æ—Ä–∏–∏ –Ω–∞ 100 –ø—Ä–æ–¥—É–∫—Ç–∞</b>: 212\n<b>–ë–µ–ª–∫–∏</b>: 2.0\n<b>–ñ–∏—Ä—ã</b>: 20.0\n<b>–£–≥–ª–µ–≤–æ–¥—ã</b>: 6.0".format(message.from_user, bot.get_me()),
    #parse_mode='html')
        else:
            bot.send_message(message.chat.id,'–ú–µ–Ω—è –µ—â—ë –Ω–µ –¥–æ–ø–∏—Å–∞–ª–∏ –¥—Ä—É–≥, –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–±—è.')

def find(message):
    text = message.text
    #print(cursor.execute("SELECT category FROM products WHERE category=?", (text,)))
    cursor.execute("SELECT * FROM products WHERE name LIKE '%'||?||'%'", (text,))
    ans = cursor.fetchall()
    #print(len(ans))
    if len(ans) == 0:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item = types.KeyboardButton("–£–∑–Ω–∞—Ç—å –∫–∞–ª–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å üëç",)
        markup.add(item)
        bot.send_message(message.chat.id, '–¢–∞–∫–æ–≤–æ —É –Ω–∞—Å –Ω–µ –≤–æ–¥–∏—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑', reply_markup=markup)
        bot.register_next_step_handler(message, select_aim)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for i, r in enumerate(ans):
            item = types.KeyboardButton(r[2])
            markup.add(item)
        bot.send_message(message.chat.id, "–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=markup)
        bot.register_next_step_handler(message, output)


def output(message):
    text = message.text
    cursor.execute("SELECT energy FROM products WHERE name=?", (text,))
    ans = cursor.fetchone()
    out = text + "\n–ù–∞ 100 –≥—Ä–∞–º–º: \n" + str(ans)[2:-3]
    bot.send_message(message.chat.id, out,reply_markup=None)

# –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±–æ—Ç–∞, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è —Ä–∞—Å—á—ë—Ç. –ü–æ–∫–∞ —á—Ç–æ –∑–¥–µ—Å—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã:

# bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –≤–µ—Å:")
weight = 80
# bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ —Ä–æ—Å—Ç:")
height = 180
# bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –≤–æ–∑—Ä–∞—Å—Ç:")
age = 20
menform = 88.36 + 13.4 * weight + 4.8 * height - 5.7 * age
womform = 447.6 + 9.2 * weight + 3.1 * height - 4.3 * age


# –§-—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'male':
                bot.send_message(call.message.chat.id, "–í–∞—à–∞ –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(menform))
            elif call.data == 'female':
                bot.send_message(call.message.chat.id, "–í–∞—à–∞ –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: " + str(womform))
    except Exception as e:
        print(repr(e))
# RUN
bot.polling(none_stop=True)
